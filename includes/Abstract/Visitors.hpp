#ifndef VISITORS_HPP
#define VISITORS_HPP

#include <string>
#include <vector>

namespace Abstract
{
	class Visitors
	{
	public:
		//////////////////////////////////////////////////////////
		//                       CONSTRUCTOR                    //
		//////////////////////////////////////////////////////////
		Visitors() {}
		//////////////////////////////////////////////////////////
		//                       ACCESSOR                       //
		//////////////////////////////////////////////////////////
		bool GetIsVisitedBy(std::string visitor);
		//////////////////////////////////////////////////////////
        //                       MUTATOR                        //
        //////////////////////////////////////////////////////////
		inline void AddVisitor(std::string visitor = "") {visitors_.push_back(visitor);}
		void RemoveVisitor(std::string visitor);		
	private:
		//////////////////////////////////////////////////////////
        //                       ATTRIBUTES                     //
        //////////////////////////////////////////////////////////
		std::vector<std::string> visitors_;
	};
}
#endif // VISITORS_HPP